var log = require("log");
log.setLevel("INFO");
var documents = require("document");

var params = {};
if(request.body != null){
    params = request.body;
}else if(request.parameters.body){
    params = request.parameters.body;
} else {
    params = request.parameters;
}
if(typeof params == 'string' && params != null){
    try{
        params = JSON.parse(params);   
    }catch(e){
        return "INVALID OR MISSING PARAMETER";
    }
}

var results;
var action = params.action;
var key = params.key;
var cancel = params.cancel; 
var number = params.number; 

if(cancel){
    var updateParams = {};
    updateParams["update"] = "true";
    updateParams["key"] = key;
    updateParams["cancelled"] = "Yes";
    updateParams["meta.types"] = {
        "orderDate" : "date"
    }
    var fieldsToSave = updateParams;
    var fieldsToSaveResult = documents.save(fieldsToSave);
    if(fieldsToSaveResult.metadata.status == "failure") {
        return fieldsToSaveResult.metadata;
    }else{
        fieldsToSave["key"] = fieldsToSave.key;
        var message = {"result": "success", "id" : "reservation-grid"};
        publish("responseChannel", message);
        return   {result : "success"}
    }
}else{
    var queryParams = {};
    var fieldsParams = "*";
    var queryString = 'formType = "reservation" and number = "' + number + '" and cancelled = "No"';

    queryParams["count"] = "true";
    queryParams["query"] =  queryString;
    queryParams["fields"] =  fieldsParams;

    log.info(JSON.stringify(queryParams))
    results = documents.query(queryParams);

    return results.result.documents

}

