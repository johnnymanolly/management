/**
 * Gets data for the grid.
 * 
 *  @param columnName
 *  @param resultsPerPage
 *  @param pageNumber
 *  @param sort
 *  @param sortType
 *  @param queryFilter
 *  @param queryType
 *  @param sortingColumnName
 *  @param filterColumnName
 *  @param action
 * 
 * @return On success: { "status" : "success" }
 *         On failure: { "status" : "failure", "errorDetail" : "[error message]" }
 */


var log = require("log");
log.setLevel("INFO");
var documents = require("document");

/* create dummy data
for(var i = 1; i <= 100; i++){
  var fields = {};
  fields["formType"] = "car";
  fields["name"] = "name_"+i;
  fields["model"] = "model_"+i;
  fields["price"] = "price_"+i;
  documents.save(fields);
}
return
*/
var params = {};
if(request.body != null){
	params = request.body;
}else if(request.parameters.body){
	params = request.parameters.body;
} else {
  params = request.parameters;
}
if(typeof params == 'string' && params != null){
    try{
        params = JSON.parse(params);   
    }catch(e){
        return "INVALID OR MISSING PARAMETER";
    }
}

var columnName = params.columnName;
var resultsPerPage = params.resultsPerPage;
var pageNumber = params.pageNumber;
var sort = params.sort;
var sortType = params.sortType;
var queryFilter = params.queryFilter;
var queryType = params.queryType;
var sortingColumnName = params.sortingColumnName;
var filterColumnName = params.filterColumnName;
var category = params.category;

function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

function lowerCaseFirstLetter(string) {
    return string.charAt(0).toLowerCase() + string.slice(1);
}


var results;
var queryParams = {};
if(sortType == null) sortType = "string"
var fieldsParams = "*";
var queryString = 'formType = "categories" and publish = "Published"';
if(category){
    queryString += ' and category="'+category+'"';
}
var sortString = (sortingColumnName && sortingColumnName != "" && sortingColumnName != "undefined") ? sortingColumnName+"<"+sortType+":"+sort+">" : null;

queryParams["count"] = "true";
queryParams["query"] =  queryString;
queryParams["fields"] =  fieldsParams;

if(sortString){
    queryParams["sort"] = sortString;
}
if(resultsPerPage){
    queryParams["resultsPerPage"] = resultsPerPage;
}
if(pageNumber){
    queryParams["pageNumber"] = pageNumber;
}
log.info(JSON.stringify(queryParams))
results = documents.query(queryParams);

return results.result.documents

