/**
 * Gets data for the grid.
 * 
 *  @param columnName
 *  @param resultsPerPage
 *  @param pageNumber
 *  @param sort
 *  @param sortType
 *  @param queryFilter
 *  @param queryType
 *  @param sortingColumnName
 *  @param filterColumnName
 *  @param action
 * 
 * @return On success: { "status" : "success" }
 *         On failure: { "status" : "failure", "errorDetail" : "[error message]" }
 */

var log = require("log");
log.setLevel("INFO");
var documents = require("document");

var params = {};
if(request.body != null){
    params = request.body;
}else if(request.parameters.body){
    params = request.parameters.body;
} else {
    params = request.parameters;
}
if(typeof params == 'string' && params != null){
    try{
        params = JSON.parse(params);   
    }catch(e){
        return "INVALID OR MISSING PARAMETER";
    }
}

var columnName = params.columnName;
var resultsPerPage = params.resultsPerPage;
var pageNumber = params.pageNumber;
var sort = params.sort;
var sortType = params.sortType;
var queryFilter = params.queryFilter;
var queryType = params.queryType;
var sortingColumnName = params.sortingColumnName;
var filterColumnName = params.filterColumnName;
var action = params.action;
var publishStatus = params.publishStatus;

var results;

if(request.files && request.files["file"])
{
    var img = request.files["file"];
    var images = [];
    images.push(img[0]);
}

if(action)
{
    var fieldsToSave = {};
    var row = params.row;
    if(typeof row == 'string') row = JSON.parse(row);
    for(param in row)
    {
        fieldsToSave[param] = row[param]
    }  
    fieldsToSave["formType"] = "category";  
    if(action == "set")
    {
        if(images)
        {
            fieldsToSave["attachments"] = images; 
            fieldsToSave["image"] = images[0]['fileName']; 
        }
        if(params.key)
        {
            fieldsToSave["key"] = params.key; 
        }

        log.info(JSON.stringify(fieldsToSave))  
        var fieldsToSaveResult = documents.save(fieldsToSave);
        log.info("Add : " +JSON.stringify(fieldsToSaveResult))  
        if(fieldsToSaveResult.metadata.status == "failure") 
        {
            return fieldsToSaveResult.metadata;
        }
        else
        {
            var resp = {status : "success", key: fieldsToSaveResult.result.document.key};
            if(images) resp["fileName"] = images[0]['fileName'];
            return  resp
        }
    }
    else if(action == "delete")
    {
        if(params.keys)
        {
            var keys = params.keys;
            for(var i = 0; i < keys.length; i++)
            {
                documents.delete(keys[i]);
            }
            return  {status : "success"}
        } 
        else if(params.attachment)
        {
            var fields = {};
            fields["key"] = params.key;
            fields["image"] = "";
            fields["attachments.apsdb.delete"] = params.attachment;

            log.info(JSON.stringify(fields))  
            var fieldsToSaveResult = documents.save(fields);
            if(fieldsToSaveResult.metadata.status == "failure")
            {
                return fieldsToSaveResult.metadata;
            }
            else
            {
                return  {status : "success"}
            }

        }

    }
}
else
{
    var queryParams = {};
    if(sortType == null) sortType = "string"
    var fieldsParams = "*";
    var queryString = 'formType = "category"';
    if(publishStatus){
        queryString += ' and publish = "' + publishStatus + '"';
    }
    var sortString = (sortingColumnName && sortingColumnName != "" && sortingColumnName != "undefined") ? sortingColumnName+"<"+sortType+":"+sort+">" : null;
    if(sortString == null){
        //   sortString = "apsdb.creationTime<date:ASC>"
    }
    queryParams["count"] = "true";
    queryParams["query"] =  queryString;
    queryParams["fields"] =  fieldsParams;

    if(queryFilter)
    {
        var filterQuery = (filterColumnName == null)? " and (name like \"" +queryFilter+ "%\" or category like \"" +queryFilter+ "%\" or price like \"" +queryFilter+ "%\" or image like \"" +queryFilter+ "%\")" : "and ("+filterColumnName+"<"+sortType+">" + " like \"" +queryFilter+ "%\")";
        queryParams["query"] += filterQuery;
    }

    if(sortString)
    {
        queryParams["sort"] = sortString;
    }
    if(resultsPerPage)
    {
        queryParams["resultsPerPage"] = resultsPerPage;
    }
    if(pageNumber){
        queryParams["pageNumber"] = pageNumber;
    }
    log.info(JSON.stringify(queryParams))
    results = documents.query(queryParams);

    return results.result
}

