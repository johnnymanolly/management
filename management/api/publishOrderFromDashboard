var documents = require("document");
var dateFormatter = require("/modules/momentjs/moment.min.js");
var alertLib = require("management/api/lib/alert");

var log = require("log");
log.setLevel("INFO");

var params = {};

if(request.body != null){
    params = request.body;
}else if(request.parameters.body){
    params = request.parameters.body;
} else {
    params = request.parameters;
}
if(typeof params == 'string' && params != null){
    try{
        params = JSON.parse(params);   
    }catch(e){
        return "INVALID OR MISSING PARAMETER";
    }
}

var order = {};
for(obj in params){
    order[obj] = params[obj]
}

order["items"] = JSON.stringify(order["items"]);

order["formType"] = "onlineOrder";
order["orderStatus"] = "Unassigned";
order["delivered"] = "Not delivered";
order["cancelled"] = "No";
var date = new Date();

var orderDate = dateFormatter.moment(date.getTime()).add(3,'h').format("YYYY-MM-DDTHH:mm:ssZZ");
order["orderDate"] = orderDate;

order["meta.types"] = {
    "items" : "text",
    "total" : "numeric",
    "orderDate": "date"
}


var registered = false;
var number = order["number"];
var queryParams = {};
var fieldsParams = "number";
var queryString = 'formType = "onlineOrder" or formType = "localOrder" and number = "' + number +'"';
queryParams["resultsPerPage"] = "1";
queryParams["query"] =  queryString;
queryParams["fields"] =  fieldsParams;

var queryResult = documents.query(queryParams);
if(queryResult.metadata.status == "success" && queryResult.result.documents.length > 0){
    registered = true;
}else{
    registered = false;
}

order["client"] = (registered) ? "Previous Client" : "New Client";

log.info(JSON.stringify(order))
var saveResult = documents.save(order);
log.info(JSON.stringify(saveResult))
order["key"] = saveResult.result.document.key;
var message = {"result": {result : [order], action: "add"}, "id" : "orders-grid"};
publish("responseChannel", message);
alertLib.alert();
return {status: "success"}



