var documents = require("document");
var dateFormatter = require("/modules/momentjs/moment.min.js");
var alertLib = require("management/api/lib/alert");

var log = require("log");
log.setLevel("INFO");

var params = {};

if(request.body != null){
    params = request.body;
}else if(request.parameters.body){
    params = request.parameters.body;
} else {
    params = request.parameters;
}
if(typeof params == 'string' && params != null){
    try{
        params = JSON.parse(params);   
    }catch(e){
        return "INVALID OR MISSING PARAMETER";
    }
}

var order = {};
for(obj in params){
    order[obj] = params[obj]
}

//return JSON.parse(order["items"]);

var orderId = + new Date();
orderId = orderId.toString(16);
order["orderId"] =  orderId;

order["items"] = JSON.stringify(order["items"]);

order["formType"] = "onlineOrder";
order["orderStatus"] = ( dateFormatter.moment(order["orderDate"]).day() == dateFormatter.moment(order["deliveryDate"]).day()) ? "Pending.." : "Scheduled"
order["scheduled"] = ( dateFormatter.moment(order["orderDate"]).day() == dateFormatter.moment(order["deliveryDate"]).day()) ? "Pending.." : "Scheduled"
order["delivered"] = "Not delivered";
order["cancelled"] = "No";

order["meta.types"] = {
    "items" : "text",
    "total" : "numeric",
    "deliveryDate": "date",
    "orderDate": "date"
}


var registered = false;
var email = order["email"];
var queryParams = {};
var fieldsParams = "email";
var queryString = 'formType = "onlineOrder" or formType = "localOrder" and email = "' + email +'"';
queryParams["resultsPerPage"] = "1";
queryParams["query"] =  queryString;
queryParams["fields"] =  fieldsParams;

var queryResult = documents.query(queryParams);
if(queryResult.metadata.status == "success" && queryResult.result.documents.length > 0){
    registered = true;
}else{
    registered = false;
}

order["client"] = (registered) ? "Previous Client" : "New Client";

log.info("******* items *********" +JSON.stringify(order["items"]))

log.info("******* order *********" +JSON.stringify(order))
var saveResult = documents.save(order);
log.info(JSON.stringify(saveResult))
order["key"] = saveResult.result.document.key;
var message = {"result": {result : [order], action: "add"}, "id" : "orders-grid"};
publish("responseChannel", message);

var body = "You have a new online order. Click on the link to see the order: https://la-fourchette-libanaise.scriptrapps.io/management/home.html#/onlineOrders";

var from = "E-Shop";

var subject = "New order!";
alertLib.alert(from, subject, body);
return {status: "success", orderKey: saveResult.result.document.key, orderId: orderId}



