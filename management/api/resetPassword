
var log = require("log");
log.setLevel("INFO");
var documents = require("document");

var params = {};
if(request.body != null){
	params = request.body;
}else if(request.parameters.body){
	params = request.parameters.body;
} else {
  params = request.parameters;
}
if(typeof params == 'string' && params != null){
  	try{
    	params = JSON.parse(params);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

var login = params.login;
var password = params.password;
var token = params.token;

if(!password && login)
{
    
    var timestamp = + new Date();

    //fieldsToSave["key"] = toHex(timestamp); 
    var fieldsToSave = {};
    fieldsToSave["formType"] = "resetPassword"; 
    fieldsToSave["login"] = login; 

   

    var fieldsToSaveResult = documents.save(fieldsToSave);
    if(fieldsToSaveResult.metadata.status == "failure")
    {
        return fieldsToSaveResult.metadata;
    }
    else
    {
        var dockey = fieldsToSaveResult.result.document.key;
        var link = "http://www.supermarket.project.com/index.html#/resetPassword?token="+dockey;
        var msg = "Click on the following link to reset your password: ";
        var body = msg + " " + link;
        
        sendMail(login, "e-shop", "Password Reset", body);
        return  {status : "success"}
    }
}
else if(token && password)
{
    
    var key = toHex("notificationSettings");
    var queryParams = {};
    queryParams["query"] =  'key = "'+ token +'"';
    queryParams["fields"] = "login";
    var results =  documents.query(queryParams);
    
    log.info("notification document: " +JSON.stringify(results))
    
    if(results.metadata.status == "failure")
    {
        return {status : "failure", errorDetails : "an error has occured when quering resetPassword doc key: " + key, errorMsg: results};
    } 
    else if(results.result.documents && results.result.documents.length == 1)
    {
        var doc =  results.result.documents[0];

        var login = doc.login;
    
    
        var fields = {
            "apsdb.update": "true",
            login : login,
            password : password
        }

        log.info("fields: "+JSON.stringify(fields))
        var saveUser = apsdb.callApi("SaveUser", fields, null);
        
        log.info("saveUser result : "+JSON.stringify(saveUser))
        
        if(saveUser.metadata.status == "success")
        {
            var deleteResult = documents.delete(doc.key);
            if(saveUser.metadata.status == "success")
            {
            	return {status: "success"}
            }
            else
            {
				return {status: "success", errorDetails: "doc not deleted"}
            }
        }
        else
        {
            return {status: "failure", errorCode: saveUser.metadata.errorCode, errorDetails: saveUser.metadata.errorDetail}
        }
    }
    
}





function toHex(input){
    try { hexcase } catch(e) { hexcase=0; }
    var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
    var output = "";
    var x;
    for(var i = 0; i < input.length; i++)
    {
        x = input.charCodeAt(i);
        output += hex_tab.charAt((x >>> 4) & 0x0F)
            + hex_tab.charAt( x & 0x0F);
    }
    return output;
}

