var log = require("log");
log.setLevel("INFO");


var documents = require("document");


var params = {};

if(request.body != null){
	params = request.body;
}else if(request.parameters.body){
	params = request.parameters.body;
} else {
  params = request.parameters;
}
if(typeof params == 'string' && params != null){
  	try{
    	params = JSON.parse(params);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

var columnName = params.columnName;
var resultsPerPage = params.resultsPerPage;
var pageNumber = params.pageNumber;
var sort = params.sort;
var sortType = params.sortType;
var queryFilter = params.queryFilter;
var queryType = params.queryType;
var sortingColumnName = params.sortingColumnName;
var filterColumnName = params.filterColumnName;
var key = params.key;
var queryParams = {};
if(sortType == null) sortType = "string"
var fieldsParams = "items, image";
var queryString = 'formType = "onlineOrder" and key="'+key+'"';
var sortString = (sortingColumnName && sortingColumnName != "" && sortingColumnName != "undefined") ? sortingColumnName+"<"+sortType+":"+sort+">" : null;

queryParams["count"] = "true";
queryParams["query"] =  queryString;
queryParams["fields"] =  fieldsParams;

if(queryFilter){
  var filterQuery = (filterColumnName == null)? "and (name like \"" +queryFilter+ "%\" or address like \"" +queryFilter+ "%\" or number like \"" +queryFilter+ "%\")" : "and ("+filterColumnName+"<"+sortType+">" + " like \"" +queryFilter+ "%\")";
  queryParams["query"] += filterQuery;
}

if(sortString){
  queryParams["sort"] = sortString;
}
if(resultsPerPage){
  queryParams["resultsPerPage"] = resultsPerPage;
}
if(pageNumber){
  queryParams["pageNumber"] = pageNumber;
}
log.info(JSON.stringify(queryParams))

var results = documents.query(queryParams);
var docs =  results.result.documents;


var array = JSON.parse(docs[0].items);
if(typeof array == "string") array = [JSON.parse(array)];
for(var i = 0; i <= array.length; i++){
    if(typeof array[i] == "string"){
        array[i] = JSON.parse(array[i]);
    }
}
return {documents: array, count: array.length}









