var http = require("http");

var params = {};
if(request.body != null){
	params = request.body;
}else if(request.parameters.body){
	params = request.parameters.body;
} else {
  params = request.parameters;
}
if(typeof params == 'string' && params != null){
  	try{
    	params = JSON.parse(params);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

var id = params.login;
var password = params.password;

return verifyCredentials(id, password)

function verifyCredentials(id,password){
    if(id == null || id.trim() == ""){
        return {"metadata" :{"status":"failure" ,"errorCode" :"PARAMETER_REQUIRED", errorDetail:"The parameter [id] is required"}};
    }

    if(password == null || password.trim() == ""){
        return {"metadata" :{"status":"failure" ,"errorCode" :"PARAMETER_REQUIRED", errorDetail:"The parameter [password] is required"}};
    }


    var apiCall = apsdb.getApiCall("https://web.scriptr.io/apsdb/rest","GET", atob("UEYzNUVERTI0Qw=="), "VerifyCredentials", {"apsws.responseType" : "JSON"},{},true,id,password);

    var url = apiCall.baseURL + "?" + apiCall.query;

    if(!apiCall.metadata){
        var result = http.request({
            "url" : url
        });
        var jsonResult = JSON.parse(result.body);
        if(jsonResult.response.metadata.status == "success"){
            var tokenResult = apsdb.callApi("GenerateToken",{"apsdb.runAs":id, "apsdb.bindReferrer": true},null);
            if(tokenResult.metadata.status == "success"){
                tokenResult["result"]["token"] = tokenResult["result"]["apsdb.authToken"];
                delete tokenResult["result"]["apsdb.authToken"];
                var getDevice = apsdb.callApi("GetDevice",{"id":id},null);
                log.info("--->getDevice"+JSON.stringify(getDevice))
                if(getDevice.metadata.status == "success"){
                    tokenResult["result"]["user"] = getDevice.result["device"]
                } else {
                    var getUser = apsdb.callApi("GetUser",{"login":id},null);
                    log.info("--->getUser"+JSON.stringify(getUser))
                    if(getUser.metadata.status == "success"){
                        tokenResult["result"]["user"] = getUser.result["user"]
                    }
                }
                return {status: "failure", result : tokenResult};

            }else{
                return {status: "failure", result: JSON.stringify(tokenResult)}
            }
        }else{
            return jsonResult["response"];
        }
    }else{
        return apiCall; 
    }

}
