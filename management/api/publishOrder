var documents = require("document");
var dateFormatter = require("/modules/momentjs/moment.min.js");
var alertLib = require("management/api/lib/alert");

var log = require("log");
log.setLevel("INFO");

log.info(JSON.stringify(request.rawBody))

var order = JSON.parse(request.rawBody);
for(obj in order){
  order[obj] = order[obj]
}

order["items"] = JSON.stringify(order["items"]);

order["formType"] = "onlineOrder";
order["orderStatus"] = ( dateFormatter.moment(order["orderDate"]).day() == dateFormatter.moment(order["deliveryDate"]).day()) ? "Unassigned" : "Scheduled"
order["scheduled"] = ( dateFormatter.moment(order["orderDate"]).day() == dateFormatter.moment(order["deliveryDate"]).day()) ? "Unassigned" : "Scheduled"
order["delivered"] = "Not delivered";
order["cancelled"] = "No";

order["meta.types"] = {
        "items" : "text",
        "total" : "numeric",
        "deliveryDate": "date",
        "orderDate": "date"
      }


var registered = false;
var number = order["number"];
var user = apsdb.callApi("GetUser", {login: number}, null);
if(user.metadata.status == "success" && user.result.user.login){
    registered = true;
}else{
    registered = false;
}

if(!registered){
    var queryParams = {};
    var fieldsParams = "*";
    var queryString = 'formType = "client" and number = "' + number + '"';

    queryParams["query"] =  queryString;
    queryParams["fields"] =  fieldsParams; 
    var result = documents.query(queryParams);
    if(result.result.documents.length > 0) {
      registered = true;
    }
}
order["client"] = (registered) ? "Previous Client" : "New Client";

log.info(JSON.stringify(order))
order["fullName"] = order["name"];
order["orderedBy"] = number;
order["cancelled"] = "No";
var saveResult = documents.save(order);
log.info(JSON.stringify(saveResult))
order["key"] = saveResult.result.document.key;
var message = {"result": {result : [order], action: "add"}, "id" : "orders-grid"};
publish("responseChannel", message);
alertLib.alert();
return saveResult



